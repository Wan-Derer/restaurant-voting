Тот же курс: https://javaops.ru/view/bootjava

К уроку 1:

	1.2 Spring Boot maven plugin. Конвертация в WAR. Детали реализации (https://stepik.org/lesson/468534?unit=459354)
		Spring Boot maven plugin: https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/
		Конвертация JAR приложения в WAR: http://spring-projects.ru/guides/convert-jar-to-war-maven/
		Modularizing a Spring Boot Application: https://reflectoring.io/spring-boot-modules/
		Обратная сторона Spring: https://habr.com/post/334448/
		Understanding Spring Boot: https://geowarin.com/understanding-spring-boot/
		Spring Boot the Ripper (E.Borisov & K.Tolkachev): https://www.youtube.com/watch?v=zEdHFXr9D9Y
		Аннотация @SpringBootApplication: https://java-ru-blog.blogspot.com/2020/02/annotation-springbootapplication.html

	1.3 Настройка проекта (https://stepik.org/lesson/468535/step/1?unit=459355)
		Репозиторий BootJava: https://github.com/JavaOPs/bootjava
		Системы управления версиями. Git: https://github.com/JavaOPs/basejava/blob/master/lesson/lesson1.md#-4-системы-управления-версиями-git

    1.4 Проект Lombok (https://stepik.org/lesson/468536/step/1?unit=459356)
        Подключение
            Optional Dependencies: http://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html
            Maven Scope for Lombok (Compile vs. Provided): https://stackoverflow.com/questions/29385921/maven-scope-for-lombok-compile-vs-provided
            Exclude lombok in Spring Boot: https://stackoverflow.com/questions/45202639/548473
            How does lombok work?: https://stackoverflow.com/a/6108457/548473
            Abstract Syntax Tree transformations: http://notatube.blogspot.com/2010/12/project-lombok-creating-custom.html
        Project Lombok
            Объявляем войну бойлерплейту: https://habr.com/ru/post/142356/
            Фичи Lombok:: https://urvanov.ru/2015/09/22/project-lombok/
            Is it safe to use Project Lombok?: https://stackoverflow.com/questions/3852091/548473

К уроку 2:

    2.1 Spring Data JPA. ApplicationRunner (https://stepik.org/lesson/468537/step/1?unit=459361)
        Spring Data (https://spring.io/projects/spring-data):
            Introduction to Spring Data JPA: http://www.baeldung.com/the-persistence-layer-with-spring-data-jpa
            Евгений Борисов — Spring Data: https://www.youtube.com/watch?v=nwM7A4TwU3M
        Common application Data properties: https://docs.spring
        .io/spring-boot/docs/current/reference/html/appendix-application-properties.html#data-properties
        ApplicationRunner and CommandLineRunner: https://dzone.com/articles/spring-boot-applicationrunner-and-commandlinerunne
        Проблема N+1. Стратегии загрузки коллекций
            N+1 selects issue: https://stackoverflow.com/questions/97197/548473
            в JPA: https://dou.ua/lenta/articles/jpa-fetch-types/
            в Hibernate: https://dou.ua/lenta/articles/hibernate-fetch-types/
        Hibernate configurations:
            hibernate.jdbc.fetch_size vs hibernate.jdbc.batch_size: https://stackoverflow.com/questions/21257819/548473
        Open Session In View Anti-Pattern. spring.jpa.open-in-view: https://stackoverflow.com/a/48222934/548473

		2.2 H2. Популирование и конфигурирование (https://stepik.org/lesson/468538/step/1?unit=459362)

      H2:
				Performance Comparison: http://www.h2database.com/html/performance.html
				How reliable is h2?: https://stackoverflow.com/questions/4687156/548473
				Using H2 for a production: https://www.reddit.com/r/java/comments/6dpfhr/anyone_using_h2_database_for_a_production_spring/
				Эволюция H2 + комментарии (тормозит на 50k+ таблицах): https://habr.com/ru/post/446380/
				H2 console: https://medium.com/@harittweets/how-to-connect-to-h2-database-during-development-testing-using-spring-boot-44bbb287570
				Start H2 TCP server: https://stackoverflow.com/questions/37068808/548473

			Loading Initial Data: https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
      H2: NULL not allowed for column “ID”: https://stackoverflow.com/a/54697387/548473

      если у вас версия spring-boot 2.5.0 и выше, добавьте в application.yaml:
      spring.jpa.defer-datasource-initialization: true
      (https://stackoverflow.com/a/67678945/548473)

		2.3 Рефакторинг model. Spring Data JPA @Query (https://stepik.org/lesson/468539/step/1?unit=459363)
        hashCode/equals в Entity (не делайте сравнение по всем полям!): https://stackoverflow.com/questions/5031614/548473
        Field vs property access: https://stackoverflow.com/a/6084701/548473
        Spring Data JPA @Query: https://www.baeldung.com/spring-data-jpa-query
        Как работает Spring Data JPA: https://habr.com/ru/post/232381/#datajpa
        Query Creation: https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods.query-creation
        Использование @Param, @RequestParam и @PathVariable: https://habr.com/ru/post/440214/

К уроку 3:
    3.1 Spring Data REST (https://stepik.org/lesson/468540/step/1?unit=459364)
        Spring Data REST: https://spring.io/projects/spring-data-rest
        Понимание HATEOAS (Hypermedia as the Engine of Application State): http://spring-projects.ru/understanding/hateoas/
        REST API — Что такое HATEOAS?: https://habr.com/ru/post/483328/
        Repository resources: https://docs.spring.io/spring-data/rest/docs/current/reference/html/#repository-resources
        Spring Data REST expose ids: https://stackoverflow.com/questions/24936636/548473/33744785#33744785
        Spring Data REST settings: https://docs.spring.io/spring-data/rest/docs/current/reference/html/#getting-started.basic-settings
        Spring REST and HAL Browser: https://www.baeldung.com/spring-rest-hal
        HAL vs HATEOAS: https://stackoverflow.com/questions/25819477/548473

    3.2 Конфигурирование Jackson (https://stepik.org/lesson/468541/step/1?unit=459365)
        Common application JSON properties: https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#json-properties
        Аннотации Jackson: https://nsergey.com/jackson-annotations/



=====================================================================









К уроку 4 (https://javaops.ru/view/bootjava/lesson04):
    4.1 Подключение Security. Аутентификация по умолчанию
        Wiki: Аутентификация: https://ru.wikipedia
        .org/wiki/%D0%90%D1%83%D1%82%D0%B5%D0%BD%D1%82%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F
        Wiki: Авторизация: https://ru.wikipedia.org/wiki/%D0%90%D0%B2%D1%82%D0%BE%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F
        Common application Security properties: https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#security-properties

    4.2 Конфигурирование в коде приложения. Password Encoding
        InMemory Аутентификация: https://www.techiedelight.com/form-based-authentication-in-spring-boot-security/
        Java API Examples: https://www.programcreek.com/java-api-examples/
        Authentication: @Override vs @Autowired: https://stackoverflow.com/questions/42316643/548473
        DelegatingPasswordEncoder: https://docs.spring
        .io/spring-security/site/docs/current/reference/html5/#authentication-password-storage-dpe
        @AuthenticationPrincipal: https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#mvc-authentication-principal

    4.3 Аутентификация пользователя из БД. AuthUser
        Authentication with a DB UserDetailsService: https://www.baeldung.com/spring-security-authentication-with-a-database
        Аутентификация с помощью UserDetailsService: https://www.codeflow.site/ru/article/spring-security-authentication-with-a-database
        Ключевые сервисы Spring Security: https://ru.wikibooks.org/wiki/Spring_Security/%D0%9A%D0%BB%D1%8E%D1%87%D0%B5%D0%B2%D1%8B%D0%B5_%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B_Spring_Security
        Java Based Configuration: https://www.tutorialspoint.com/spring/spring_java_based_configuration.htm

    4.4 Role and GrantedAuthority
        Security Form Login: https://www.baeldung.com/spring-security-login
        Spring Security Expressions: https://www.baeldung.com/spring-security-expressions
        Role and GrantedAuthority: https://stackoverflow.com/a/19542316/548473

    4.5 Basic authorization. Кастомизация Json
        Basic access authentication: https://en.wikipedia.org/wiki/Basic_access_authentication
        Decode and Encode Base64: https://decodebase64.com/
        Написание HTTP-запросов с помощью Curl (для Windows можно использовать Git Bash): http://rus-linux.net/lib.php?name=/MyLDP/internet/curlrus.html
        Password encoding with Spring Data REST: https://stackoverflow.com/questions/30260582/548473
        Access.WRITE_ONLY: https://stackoverflow.com/a/12505165/548473


К уроку 5 (https://javaops.ru/view/bootjava/lesson05):
    5.1 REST AccountController
        Понимание REST: http://spring-projects.ru/understanding/rest/
        API you should be conservative when you reply, but accept liberally: http://stackoverflow.com/a/32728226/548473
        10 Best Practices for Better RESTful API: https://medium.com/@mwaysolutions/10-best-practices-for-better-restful-api-cbe81b06f291
        15 тривиальных фактов о правильной работе с протоколом HTTP: https://habr.com/ru/company/yandex/blog/265569/

    5.2 Error handling
        Spring rest error handling example  https://mkyong.com/spring-boot/spring-rest-error-handling-example
        Server Properties   https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#server-properties
        Using ErrorAttributes in our custom ErrorController https://www.logicbig.com/tutorials/spring-framework/spring-boot/error-attributes.html
        Скрещиваем ResponseEntityExceptionHandler и DefaultErrorAttributes  https://stackoverflow.com/a/64866190/548473
